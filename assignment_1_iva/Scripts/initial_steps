
if [ $# -eq 0 ] ; then
	printf "\n Choose one of the following options: \n\n"

	printf "extract_grammar treebank grammar \n"
	printf "reorder_grammar grammar\n"
	printf "create_lexicon grammar lexicon \n"
	printf "remove_lexical_rules grammar \n"
	printf "create_unique_treebank treebank treebank_unique \n"
	printf "create_corpus treebank corpus \n"
	printf "all treebank"
		
	printf "\n"
	exit
fi


args=("$@")

case ${args[0]} in

extract_grammar)
	echo "EXTRACTING GRAMMAR FROM TREEBANK"
	PCFG_jarpath=`which PCFG_extractor.jar`
	java -jar $PCFG_jarpath ${args[1]} ${args[2]}
	;;

reorder_grammar)
	echo "REORDERING GRAMMAR"
	less ${args[1]} | sed 's/%/%%/g' | awk '{printf ($NF " "); for (i=1; i<NF; i++) printf ($i " "); printf ("\n");}' > grammar_temp
	mv grammar_temp ${args[1]} 
	;;

create_lexicon)
	echo "CREATING LEXICON"
	less ${args[1]} | grep -E '"[^"]+"' | sed 's/\"//g' | awk '{print($3"\t"$2" "$1)}' > ${args[2]} 
	;;

remove_lexical_rules)
	sed -i 's/"//g' ${args[1]}
	;;

create_unique_treebank)
	echo "CREATING A UNIQUE TREEBANK"
	cat ${args[1]} | sed 's/\([A-Z]\) /\1-NR- /g' | awk '{ while($0~/-NR-/) sub(/-NR-/, ++cnt); print}' > ${args[2]}
	;;

create_corpus)
	echo "CREATING CORPUS FROM TREEBANK"
	cat ${args[1]} | sed 's/$/""\n/' | grep -o '"\([^"]*\)"' | sed 's/"//g' > ${args[2]}
	;;

all)
	initial_steps extract_grammar ${args[1]} grammar
	initial_steps reorder_grammar grammar
	initial_steps create_lexicon grammar lexicon
	initial_steps remove_lexical_rules grammar
	#initial_steps create_unique_treebank treebank treebank_unique
	initial_steps create_corpus treebank corpus
	;;


*)
	initial_steps
	;;

esac





