
if [ $# -eq 0 ] ; then
	printf "\n Choose one of the following options: \n\n"

	printf "likelihood grammar lexicon corpus \n"
	printf "accuracy grammar lexicon corpus \n"
	#printf "top_rules grammar \n"
		
	printf "\n"
	exit
fi


args=("$@")

case ${args[0]} in

loglikelihood)
	grammar=${args[1]}
	lexicon=${args[2]}
	corpus=${args[3]}
	
	bitpar -vp -s TOP -b 1 $grammar $lexicon $corpus parse_forest
	cat parse_forest | grep 'vitprob' | sed 's/vitprob=//g' > final_probs	

	rm parse_forest
		
	get_loglikelihood.py final_probs loglikelihoods

	;;


accuracy)
	grammar=${args[1]}
	lexicon=${args[2]}
	corpus=${args[3]}
	
	bitpar -v -s TOP -b 1 $grammar $lexicon $corpus parses
	initial_steps_part2 annotate_parses parses parses_head
	transform_parses.py parses_head | grep -v '^$' > dependency_skeletons

	#evaluateD.py dependency_skeletons ../AssignmentFiles/wsj10.txt.gold >> accuracy
	evaluateD.py dependency_skeletons ../AssignmentFiles/wsj10.txt.gold | grep 'accuracy' | sed 's/average accuracy per sentence: //g' >> accuracy
	;;


top_rules)
	grammar=${args[1]}

	echo "ITERATION" >> all_top_rules
	get_top_rules.py $grammar 10 >> all_top_rules
	;;

all)
	grammar=${args[1]}
	lexicon=${args[2]}
	corpus=${args[3]}

	evaluations_part2 loglikelihood $grammar $lexicon $corpus
	evaluations_part2 accuracy $grammar $lexicon $corpus
	#evaluations top_rules $grammar
		
	;;

*)	
	evaluations
	;;

esac



